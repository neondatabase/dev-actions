name: MutexBot Container Image

on:
  pull_request:
    branches:
      - main
    paths:
      - "mutexbot/**"
  push:
    branches:
      - main
    paths:
      - "mutexbot/**"
    tags:
      - "mutexbot-v*.*.*"

permissions:
  contents: read

env:
  GHCR_REPO: ghcr.io/neondatabase/dev-actions

jobs:
  build:
    runs-on: ${{ fromJson(format('["self-hosted", "{0}"]', matrix.platform == 'linux/arm64' && 'small-arm64' || 'small')) }}
    outputs:
      digest_arm64: ${{ steps.export_digest.outputs.digest_arm64 }}
      digest_amd64: ${{ steps.export_digest.outputs.digest_amd64 }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Fetch mutexbot folder
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: mutexbot

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.GHCR_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: mutexbot
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.GHCR_REPO }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        id: export_digest
        run: |
          arch="$(echo -n ${{ matrix.platform }} | sed -e 's/linux\///')"
          digest="${{ steps.build.outputs.digest }}"
          echo "digest_${arch}=${digest#sha256:}" >> "$GITHUB_OUTPUT"

  merge:
    runs-on: ["self-hosted", "small"]
    needs:
      - build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.GHCR_REPO }}
          tags: |
            # branch event
            type=ref,enable=true,priority=600,prefix=mutexbot-,suffix=,event=branch
            # pull request event
            type=ref,enable=true,priority=600,prefix=mutexbot-pr-,suffix=,event=pr
            # tags event
            type=match,pattern=mutexbot-v(.*)

      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            ${{ env.GHCR_REPO }}@sha256:${{ needs.build.outputs.digest_arm64 }} \
            ${{ env.GHCR_REPO }}@sha256:${{ needs.build.outputs.digest_amd64 }}

      - name: Inspect image
        run: docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
