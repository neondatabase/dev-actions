name: Mutexbot
description: Action to reserve and release resources on mutexbot.com
inputs:
  api_key:
    description: Mutexbot API key
  mode:
    description: Whether to reserve or release or force-release
    default: reserve
  resource_name:
    description: Mutexbot resource name
  duration:
    description: Duration for which to reserve
    default: ''
  isolation_channel:
    description: Isolation channel of resource
    default: ''

runs:
  using: "composite"
  steps:
    - name: Detect target triple
      id: triple
      shell: bash
      run: |
        echo "triple=$(uname -m)-unknown-linux-gnu" | tee -a "$GITHUB_OUTPUT"

    - name: Resolve action ref to tag
      id: tag
      shell: bash
      run: |
        if [ -z "$REF" ]; then
          echo "Empty github.action_ref, falling back to github.sha assuming local execution"
          REF="${SHA}"
        fi

        if [[ "$REF" =~ ^[0-9a-f]{40}$ ]]; then
          echo "Ref is a commit SHA, resolving to release tag..."
    
          tag=$(gh api repos/neondatabase/dev-actions/git/matching-refs/tags --paginate | jq -r --arg sha "$REF" 'map(select(.object.sha == $sha)) | first | .ref | ltrimstr("refs/tags/") // error("No release tag found for commit " + $sha)')
    
          echo "tag=$tag" | tee -a "$GITHUB_OUTPUT"
        else
          echo "tag=$REF" | tee -a "$GITHUB_OUTPUT"
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        REF: ${{ github.action_ref }}
        SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        

    - name: Download mutexbot binary
      shell: bash
      run: |
        if [ ! -f "${ARCHIVE}.tar.zst" ]; then
          gh release download "$TAG" \
            --repo "$ACTION_REPO" \
            --pattern "$ARCHIVE.tar.zst"

          tar xvf "$ARCHIVE.tar.zst"
        fi

        echo "$(pwd)/${ARCHIVE}" | tee -a "${GITHUB_PATH}"
      working-directory: ${{ github.action_path }}
      env:
        GH_TOKEN: ${{ github.token }}
        TAG: ${{ steps.tag.outputs.tag }}
        ARCHIVE: "mutexbot-${{ steps.triple.outputs.triple }}"
        ACTION_REPO: ${{ github.action_repository }}

    - name: Run mutexbot
      shell: bash
      env:
        MUTEXBOT_API_KEY: ${{ inputs.api_key }}
        MODE: ${{ inputs.mode }}
        RESOURCE_NAME: ${{ inputs.resource_name }}
        DURATION: ${{ inputs.duration }}
        ISOLATION_CHANNEL: ${{ inputs.isolation_channel }}
      run: |
        set -euo pipefail
        
        args=()
        if [[ -n "${ISOLATION_CHANNEL}" ]]; then
          args+=( "--isolation-channel" "${ISOLATION_CHANNEL}" )
        fi
        
        case "${MODE}" in
          "reserve")
            args+=(
              "reserve"
              "${RESOURCE_NAME}"
              "Reserved by ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
            )
            if [[ -n "${DURATION}" ]]; then
              args+=( "${DURATION}" )
            fi
            mutexbot "${args[@]}"
            ;;
          *)
            args+=( "${MODE}" "${RESOURCE_NAME}" )
            mutexbot "${args[@]}"
            ;;
        esac
